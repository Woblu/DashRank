// prisma/schema.prisma

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

type Record {
  username String
  percent  Int
  videoId  String
}

model Level {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  placement   Int
  name        String
  creator     String
  verifier    String?
  levelId     Int?
  videoId     String
  description String?
  list        String
  records     Record[]
  @@map("levels")
}

enum Role {
  USER
  MODERATOR
  ADMIN
}

enum SubmissionStatus {
  PENDING
  APPROVED
  REJECTED
}

enum DemonDifficulty {
  EASY
  MEDIUM
  HARD
  INSANE
  EXTREME
}

model User {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  email           String           @unique
  username        String           @unique
  password        String
  role            Role             @default(USER)
  createdAt       DateTime         @default(now())
  submissions     Submission[]
  personalRecords PersonalRecord[]
}

model Submission {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  levelName      String
  player         String
  percent        Int
  videoId        String
  rawFootageLink String
  notes          String?
  status         SubmissionStatus @default(PENDING)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  submittedBy    User             @relation(fields: [submittedById], references: [id])
  submittedById  String           @db.ObjectId
}

model PersonalRecord {
  id           String          @id @default(auto()) @map("_id") @db.ObjectId
  placement    Int
  levelName    String
  difficulty   DemonDifficulty
  attempts     Int?
  videoUrl     String
  thumbnailUrl String?
  createdAt    DateTime        @default(now())

  user     User   @relation(fields: [userId], references: [id])
  userId   String @db.ObjectId
}